@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

* {
  box-sizing: border-box;
  padding: 0px 10px 10px 10px;
  margin: 0;
  font-family: 'Poppins', sans-serif;
}

/* accent-color */
.accent_color {
  border-bottom: 2px solid black;
}

input[type='radio'] {
  accent-color: red;
}

input[type='checkbox'] {
  accent-color: blue;
}

/* align-content */
/* when we are using flex properties we should specify the width and height of the parent div and the children div's too */
/* flex-wrap property is the best solution to use align-content property */
.align_content {
  border-bottom: 2px solid black;
}

.align_content_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  display: flex;
  flex-wrap: wrap;
  align-content: center;
}

.align_content_property > div {
  border: 1px solid black;
  height: 50px;
  width: 50px;
}

/* align-items */
.align_items {
  border-bottom: 2px solid black;
}

.align_items_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  display: flex;
  align-items: center;
}

.align_items_property > div {
  border: 1px solid black;
  height: 50px;
  width: 50px;
}

/* align-self */
.align_self {
  border-bottom: 2px solid black;
}

.align_self_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  display: flex;
}

.align_self_property > div {
  border: 1px solid black;
  width: 50px;
  height: 50px;
}

.align_self_property div:nth-child(2) {
  align-self: center;
}

/* all */
/* which means by mentioning this property all it exactly copy the properties which we have given to the parent div  */
.all {
  border-bottom: 2px solid black;
}

.all_property {
  border: 1px solid black;
  font-size: 50px;
}

.all_property > div {
  all: inherit;
}

/* animation all properties */
.animation {
  border-bottom: 2px solid black;
}

.animation_all_properties {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  position: relative;
}

.animation_all_properties > div {
  border: 1px solid black;
  width: 50px;
  height: 50px;
  position: absolute;
  animation-name: aravind;
  animation-duration: 8s;
  animation-timing-function: linear;
  animation-delay: 0s;
  animation-fill-mode: backwards;
  animation-iteration-count: infinite;
  animation-direction: normal;
}

.animation_all_properties > div:hover {
  animation-play-state: paused;
}

@keyframes aravind {
  0%,
  100% {
    top: 0;
    left: 0;
    background-color: white;
  }
  25% {
    top: 0;
    left: 150px;
    background-color: rgb(168, 166, 166);
  }
  50% {
    top: 150px;
    left: 150px;
    color: rgb(80, 79, 79);
  }
  75% {
    top: 150px;
    left: 0;
    background-color: black;
  }
}

/* aspect-ratio */
/* if width and height are specified then the aspect-ratio property doesn't work */
/* if width and height are not specified then the aspect-ratio depends on the parent div by taking of margin 10px */
/* if the parent div have specified width, height and using display: flex property aspect-ratio doesn't work for children div's */
/* if one of the width and height are specified 
  Example:  width: 200px;
            aspect-ratio: 43/54;
  what is the height of it?
  Answer: (width/43) X 54 = 251.16 (height)
*/
/* aspect-ratio: width / height */
.aspect_ratio {
  border-bottom: 2px solid black;
}

.aspect_ratio_property {
  border: 1px solid red;
  /* width: 200px;
  height: 200px; */
  display: flex;
}

.aspect_ratio_property > div {
  border: 1px solid black;
  width: 50px;
  aspect-ratio: 1/1;
}

/* backdrop-filter */
.backdrop_filter {
  border-bottom: 2px solid black;
}

.backdrop_filter_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  background: url('../images/sea.avif') center/cover no-repeat
    rgb(241, 162, 241);
  display: flex;
  justify-content: center;
  align-items: center;
}

.backdrop_filter_property > div {
  border: 1px solid rgb(194, 193, 193);
  width: 100px;
  height: 50px;
  text-align: center;
  padding-block-start: 10px;
  /* By applying this webkit only it will work */
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
}

/* backface-visibility */
/* backface-visibility works with only transform: rotateY(180deg) property  */
/* by hovering on the parent div we can access the children div like see line code number: 226 */
.backface_visibility {
  border-bottom: 2px solid black;
  perspective: 1000px;
}

.backface_visibility_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  background-color: aqua;
  transition: transform 1s;
}

.backface_visibility:hover .backface_visibility_property {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  transform: rotateY(180deg);
}

/* background */
.background {
  border-bottom: 2px solid black;
}

.background_all_properties {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  color: white;
  background-image: url('../../../images/img1.jpg');
  /* background-position: center; */
  background-repeat: no-repeat;
  background-size: cover;
  background-color: white;
  overflow-y: scroll;
  /* while giving background-attachment: fixed there may be a lot of changes in the division  */
  /* background-attachment: fixed; */

  /* it changes the layer of an image or background-color  */
  /* background-blend-mode: luminosity; */

  /* it will change the background according to the content */
  /* background-clip: border-box; */

  /* it will change the positions of an image in background */
  /* background-origin: border-box; */

  background-position-x: center;
  background-position-y: center;
}

/* block-size */
/* which means giving instead of height using block-size as a property*/
.block_size {
  border-bottom: 2px solid black;
}

.block_size_property {
  border: 1px solid red;
  width: 200px;
  block-size: 200px;
}

/* border */
.border {
  border-bottom: 2px solid black;
}

.border_property {
  border: 5px double red;
}

/* border-block */
/* it will give border only for top and bottom */
.border_block {
  border-bottom: 2px solid black;
}

.border_block_porperty {
  border-block: 1px solid red;
}

/* border-bottom */
/* if two values are set; the first one is for the bottom border, the second one for the left border */
.border_bottom {
  border-bottom: 2px solid black;
}

.border_bottom_property {
  border: 1px solid red;
  border-bottom: 4px solid green;
  border-bottom-left-radius: 50px;
  border-bottom-right-radius: 50px;
}

/* border-collapse */
.border_collapse {
  border-bottom: 2px solid black;
}

table,
td,
th {
  border: 1px solid red;
}

#table {
  border-collapse: collapse;
}

/* block-end-end-radius */
/* end-end means block-end and inline-end */
/* if two values are set; the first one is for the block-end, the second one for the inline-end */
.block_end_end_radius {
  border-bottom: 2px solid black;
}

.block_end_end_radius_property {
  border: 1px solid red;
  border-end-end-radius: 100%;
}

/* border-image */
/* border-image-outset it has four values top, right, bottom, left (image should be displayed outside or inside) */
/* border-image: source slice width outset repeat; */
.border_image {
  border-bottom: 2px solid black;
}

.border_image_property {
  width: 200px;
  height: 200px;
  border-image-source: url('../../../images/border.png');
  border-image-slice: 200;
  border-image-width: 30px;
  border-image-outset: 25px 10px 10px 10px;
  border-image-repeat: stretch;
}

/* border-inline */
.border_inline {
  border-bottom: 2px solid black;
}

.border_inline_porperty {
  border-inline: 4px solid black;
}

/* border-left */
.border_left {
  border-bottom: 2px solid black;
}

.border_left_property {
  border-left: 4px solid red;
}

/* border-right */
.border_right {
  border-bottom: 2px solid black;
}

.border_right_property {
  border-right: 4px solid red;
}

/* border-radius */
.border_radius {
  border-bottom: 2px solid black;
}

.border_radius_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* border-spacing */
/* giving space in between the borders */
.border_spacing {
  border-bottom: 2px solid black;
}

table,
th,
td {
  border: 1px solid red;
}

#table1 {
  border-collapse: separate;
  border-spacing: 10px;
}

/* bottom */
.bottom {
  border-bottom: 2px solid black;
}

.bottom_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  position: relative;
}

.bottom_property > div {
  border: 1px solid black;
  position: absolute;
  bottom: 30px;
}

/* box-declaration-break */
.box_declaration_break {
  border-bottom: 2px solid black;
}

.box_declaration_break_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
}

.box_declaration_break_property > span {
  border: 4px solid black;
  padding: 0px 16px;
  border-radius: 16px;
  font-size: 15px;
  line-height: 2;
}

#span {
  -o-box-decoration-break: clone;
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

/* box-reflect */
.box_reflect {
  border-bottom: 2px solid black;
}

.box_reflect_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  -webkit-box-reflect: right;
}

/* box-shadow */
.box_shadow {
  border-bottom: 2px solid black;
}

.box_shadow_property {
  border: 1px solid red;
  width: 200px;
  height: 200px;
  box-shadow: 5px 5px 5px 5px black;
}

/* box-sizing */
/* if we give fixed width and adding the border-pixels and padding and margin etc; and giving border-box value then the total width includes of all */
/* box-content which gives the perfect content width */
.box_sizing {
  border-bottom: 2px solid black;
}

.box_sizing_property {
  border: 1px solid red;
  box-sizing: border-box;
  width: 200px;
  height: 200px;
}

/* box-after */
.break_after_before_inside {
  border-bottom: 2px solid black;
}

.break_after_before_inside_properties {
  border: 1px solid red;
  column-width: 300px;
  overflow: auto;
}

article {
  border: 1px dotted black;
  padding: 10px;
  break-after: column;
}

/* caption-side */
.caption_side {
  border-bottom: 2px solid black;
}

.caption_side_property {
  border: 1px solid red;
  text-align: center;
  caption-side: bottom;
}

/* caret-color */
/* content editiable is use to edit the content in the browser directly */
.caret_color {
  border-bottom: 2px solid black;
}

.caret_color_property {
  border: 1px solid red;
  width: fit-content;
  padding-top: 20px;
  height: 200px;
}

.caret_color_property input {
  caret-color: chartreuse;
  font-size: 20px;
}
